1Dec12
to run w/nginx and fastcgi:
   configure nginx (see /etc/nginx/conf.d/budgetweb.conf
   start nginx
   perl script/budgetweb_fastcgi -l 3002 -d
   need to run /usr/bin/fastcgi-wrapper.pl???

19Nov12
Implement file upload
Implement 'total' in line report
Format reports, instead of just using <pre>
Design a UI where all/many codes are visible; array of checkbox maybe?
Why do some codes only show up as numbers in report?  Probable
  db inconsistency from 'fix_codes'
Edit existing expenses (to fix errors):
  Need 'search' function
Implement "%d expenses like this one: apply code to all?"
Why 'new code' not working?  Getting 'code already exists' error in
  log.

20Nov12:
Fix bug regarding create_code: can't ask server to create a new
  code with ajax, because of asynch issues.  Better to try to 
  catch in expense_POST, where there's no code (or maybe a special
  "create_code" flag?)

Deploy

8Aug12
Continue testing removal of dups; have to figure out good test
strategy.

Insertion into test db shows many fields are still strings, not
numbers.  Fix this.

17Jul12
Need to setup a fixture for testing

13Jun12
report should have two modes, 'lines' and 'table' (or 'totals')

init: do a full report (subject to last six months, table mode), then
enter query loop.  Replace report() with a Report call, and use the
existing code in report() to implement table mode.


replace expense2string, @field_order with Expense.pm

fix bug regarding added codes being entered as strings 

monthly totals in report

separate io loop from query generator

# read codes (store codes in db?)
# 
# read data files
# - strip quotes
# - weed out bad lines
# - convert amounts
# - convert dates
# - convert alphanumeric codes to numbers, store to db
# insert data 

# build report hash (by_month_by_code)
# do reports